@page
@model LTWNC.Pages.HomeModel
@{
    ViewData["Title"] = "Thống kê doanh thu & sản phẩm";
}

<div class="container py-5">
    <h2 class="text-center mb-4">📊 Thống kê Doanh thu & Sản phẩm đã bán</h2>

    <div class="card shadow-sm mb-5">
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label><strong>Chọn khoảng thời gian:</strong></label>
                    <select id="timeFrameSelect" class="form-select">
                        <option value="day" selected>Ngày (trong tháng)</option>
                        <option value="month">Tháng (trong năm)</option>
                        <option value="year">Năm</option>
                    </select>
                </div>
            </div>

            <canvas id="combinedChart" style="max-height: 500px;"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let combinedChart;

        async function fetchChartData(type) {
            const res = await fetch(`/api/Chart/Stats?timeframe=${type}`);
            return res.ok ? res.json() : [];
        }

        async function renderCombinedChart(type = 'day') {
            const result = await fetchChartData(type);
            if (!Array.isArray(result)) return;

            let labels = [];
            let revenueData = [];
            let quantityData = [];

            if (type === 'day') {
                labels = result.map(r => new Date(r.date).getDate().toString());
            } else if (type === 'month') {
                labels = result.map(r => `Tháng ${r.month}`);
            } else {
                labels = result.map(r => `Năm ${r.year}`);
            }

            revenueData = result.map(r => r.totalRevenue);
            quantityData = result.map(r => r.totalQuantity);

            const ctx = document.getElementById('combinedChart').getContext('2d');
            if (combinedChart) combinedChart.destroy();

            combinedChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Doanh thu',
                            data: revenueData,
                            backgroundColor: 'rgba(30, 144, 255, 0.7)',
                            yAxisID: 'yRevenue'
                        },
                        {
                            label: 'Sản phẩm đã bán',
                            data: quantityData,
                            backgroundColor: 'rgba(255, 165, 0, 0.7)',
                            yAxisID: 'yQuantity'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: { mode: 'index', intersect: false },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: type === 'day' ? 'Ngày' : (type === 'month' ? 'Tháng' : 'Năm')
                            }
                        },
                        yRevenue: {
                            position: 'left',
                            beginAtZero: true,
                            title: { display: true, text: 'Doanh thu (₫)' },
                            ticks: {
                                callback: val => val.toLocaleString('vi-VN') + '₫'
                            }
                        },
                        yQuantity: {
                            position: 'right',
                            beginAtZero: true,
                            grid: { drawOnChartArea: false },
                            title: { display: true, text: 'Số lượng sản phẩm' },
                            ticks: {
                                callback: val => val.toLocaleString('vi-VN')
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: ctx => {
                                    if (ctx.dataset.label === 'Doanh thu')
                                        return ctx.parsed.y.toLocaleString('vi-VN') + '₫';
                                    return ctx.parsed.y.toLocaleString('vi-VN') + ' sản phẩm';
                                }
                            }
                        }
                    }
                }
            });
        }

        document.getElementById('timeFrameSelect').addEventListener('change', (e) => {
            renderCombinedChart(e.target.value);
        });

        document.addEventListener('DOMContentLoaded', () => {
            renderCombinedChart();
        });
    </script>
}
